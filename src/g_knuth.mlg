DECLARE PLUGIN "coq-plugin-tutorial.knuth"

{
open Pp
(*open Ltac_plugin*)

open Stdarg
}

VERNAC COMMAND EXTEND PrintTheorem CLASSIFIED AS QUERY
| [ "PPConstr" constr(e) ] ->
  {
    Feedback.msg_notice (Pp.str (Knuth_main.string_of_constrexpr e))
  }
| [ "Complete" reference_list(rs) ] ->
  {
    let rec aux = function [] -> [] | h::t -> Nametab.global h :: (aux t) in
    let rs = aux rs in
    Feedback.msg_notice (Knuth_main.complete rs)
  }
| [ "MyDefine" ident(i) ":=" constr(e) ] ->
  {
     let env = Global.env () in
     let sigma = Evd.from_env env in
     let (sigma, t) = Constrintern.interp_constr_evars env sigma e in
     let s = Knuth_main.declare i sigma t in
     let print r = strbrk "Defined " ++ Printer.pr_global r ++ strbrk "." in
     Feedback.msg_notice (print s)
  }
END
